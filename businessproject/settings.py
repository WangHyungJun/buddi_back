"""
Django settings for businessproject project.

Generated by 'django-admin startproject' using Django 2.0.5.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os
import logging
import pdb

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = "C:\\Users\\kshee\\buddibang"
# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'n(v(c#^n-p!4vs%-z29y!l(_k%#l&%%iq#1#dyp7$imx$6a5ur'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['DemoDemocebula.ems2qhjcwh.ap-northeast-2.elasticbeanstalk.com',
                 '127.0.0.1']

AUTH_USER_MODEL='cebula.MyUser'

# Application definition

INSTALLED_APPS = [
    # 'channels',
    'cebula',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'sorl.thumbnail',
    'haystack',
    'haystack_Wang',
    'elasticsearch',
    # 'allauth',
    # 'allauth.account',
    # 'allauth.socialaccount',
    # 'allauth.socialaccount.providers.facebook',
    # 'allauth.socialaccount.providers.google',
    'webpack_loader',
    'rest_framework',
    'api',
]

SITE_ID=1

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'businessproject.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR,'front/templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                # `allauth` needs this from django
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'businessproject.wsgi.application'

# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'temp_three',
        'USER': 'WangHyungJun',
        'PASSWORD': 'pingponginhongkong',
        'HOST': 'cebula.clmtnyask6yr.ap-northeast-2.rds.amazonaws.com',
        'PORT': 3306,
    #     'OPTIONS': {
    #         'charset': 'utf8',
    #         'use_unicode': True,
    #      },
    #     'charset': 'utf8',
    },
}



# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

AUTHENTICATION_BACKENDS = (
    # Needed to login by username in Django admin, regardless of `allauth`
    'django.contrib.auth.backends.ModelBackend',
    # `allauth` specific authentication methods, such as login by e-mail
    'allauth.account.auth_backends.AuthenticationBackend',
)

# ACCOUNT_SIGNUP_FORM_CLASS = 'cebula.forms.CreateUserForm'

#회원가입 종료 원할 때 밑의 코드 활성화
# ACCOUNT_ADAPTER = 'cebula.account_adapter.NoNewUsersAccountAdapter'


ACCOUNT_EMAIL_REQUIRED = True

# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = 'ko-kr'

TIME_ZONE = 'Asia/Seoul'

USE_I18N = True

USE_L10N = True

USE_TZ = True


WEBPACK_LOADER = {
    'DEFAULT' : {
            'BUNDLE_DIR_NAME': 'bundles/',
            'STATS_FILE': os.path.join(BASE_DIR, 'front/webpack-stats.json'),

    }
}



# WEBPACK_LOADER = {
#     'DEFAULT' : {
#             'BUNDLE_DIR_NAME': os.path.join(BASE_DIR, 'front/static/bundles/'),
#             'STATS_FILE': os.path.join(BASE_DIR, 'front/webpack-stats.json'),

#     }
# }



# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

STATIC_URL = '/static/' #이건 의미가 없는건가? '/aastatic/'으로 바꿔도 request url이 Request URL: http://127.0.0.1:8000/aastatic/bundles/MainPage.js로 바뀌어도 잘 나오네??
STATICFILES_DIRS=[
    os.path.join(BASE_DIR,'front/static'), #<-- 이게 중요하네, 이걸 바꾸니 됨, 근데 이렇게 햇엇던거같은데? 
]

STATIC_ROOT=os.path.join(BASE_DIR,'staticfiles')

#Auth settings
LOGIN_REDIRECT_URL='/cebula/'

#Media_URL
MEDIA_URL='/files/'
MEDIA_ROOT=os.path.join(BASE_DIR,'back/uploads')

DATA_UPLOAD_MAX_MEMORY_SIZE = 1000000

SOCIALACCOUNT_PROVIDERS = {
    'facebook': {
        'METHOD': 'oauth2',
        'SCOPE': ['email', 'public_profile', 'user_friends'],
        'AUTH_PARAMS': {'auth_type': 'reauthenticate'},
        'INIT_PARAMS': {'cookie': True},
        'FIELDS': [
            'id',
            'email',
            'name',
            'friends',
            'verified',
            'link',
            'gender',
            'updated_time',
        ],
        'EXCHANGE_TOKEN': True,
        'LOCALE_FUNC': lambda request: "ko_KR",
        'VERIFIED_EMAIL': False,
        'VERSION': 'v2.12',
    },
    'google': {
        'SCOPE': [
            'profile',
            'email',
        ],
        'AUTH_PARAMS': {
            'access_type': 'online',
        }
    }
}

# #gmail stmp
EMAIL_BACKEND='django.core.mail.backends.console.EmailBackend'

WHOOSH_INDEX=os.path.join(BASE_DIR, 'whoosh_index')


HAYSTACK_CONNECTIONS = {
    'default': {
        'ENGINE': 'haystack_Wang.haystack.backends.elasticsearch5_backend.Elasticsearch5SearchEngine',
        'URL': 'http://127.0.0.1:9200/',
        'INDEX_NAME': 'haystack',
    },
}

LOGGING = {
    'version': 1,
    'formatters': {
        'verbose': {
            'format': '%(levelname)s %(asctime)s %(module)s %(process)d %(thread)d %(message)s'
        },
        'simple': {
            'format': '%(levelname)s %(message)s'
        },
    },
    'handlers': {
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'simple'
        },
        'file': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': 'businessproject/check.log',
            'formatter': 'simple'
        },
    },
    'loggers': {
        'django': {
            'handlers': ['file'],
            'level': 'DEBUG',
            'propagate': True,
        },
    }
}



# REST_FRAMEWORK = {
#     # Use Django's standard `django.contrib.auth` permissions,
#     # or allow read-only access for unauthenticated users.
#     'DEFAULT_PERMISSION_CLASSES': [
#         'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly'
#     ]
# }

REST_FRAMEWORK = {
    'DEFAULT_RENDERER_CLASSES': (
        'rest_framework.renderers.JSONRenderer',
        'rest_framework.renderers.BrowsableAPIRenderer',
    )
}

ASGI_APPLICATION = 'businessproject.routing.application'

CHANNEL_LAYERS = {
    'default': {
        'BACKEND': 'channels_redis.core.RedisChannelLayer',
        'CONFIG': {
            "hosts": [('127.0.0.1', 6379)],
        },
    },
}

if DEBUG:
    # make all loggers use the console.
    for logger in LOGGING['loggers']:
        LOGGING['loggers'][logger]['handlers'] = ['console']